version: "3.8"

services:
  postgres:
    image: ghcr.io/nicolasbarsalini/postgres:latest
    container_name: espacobuddy_postgres
    restart: always
    networks:
      - espacobuddy_network
    environment:
      POSTGRES_DB: postgres
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    ports:
      - "${DATABASEPORT:-5432}:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data
      - ./assets/postgres/scripts:/docker-entrypoint-initdb.d

  keycloak:
    image: ghcr.io/nicolasbarsalini/keycloak:latest
    container_name: espacobuddy_keycloak
    user: root
    depends_on:
      - postgres
    networks:
      - espacobuddy_network
    ports:
      - "${KEYCLOAKPORT:-8080}:8080"
    restart: always
    volumes:
      - ./assets/keycloak/themes:/opt/keycloak/themes
      - ./assets/keycloak/import:/opt/keycloak/data/import
      - urbaneden_keycloak_volume:/opt/keycloak/data
    environment:
      JAVA_OPTS: "-Dkeycloak.profile.feature.upload_scripts=enabled -Dkeycloak.profile.feature.scripts=enabled -Dkeycloak.profile.feature.authorization=enabled -Dkeycloak.profile.mode=standalone"
      KC_DB: "postgres"
      KC_DB_URL: "jdbc:postgresql://espacobuddy_postgres:5432/keycloak"
      KC_DB_USERNAME: "postgres"
      KC_DB_PASSWORD: "postgres"
      KC_HTTPS_PORT: "8443"
      KC_FEATURES: "scripts,authorization"
      KC_BOOTSTRAP_ADMIN_USERNAME: "admin"
      KC_BOOTSTRAP_ADMIN_PASSWORD: "admin"
      KC_THEME: "custom-themes"
      KC_THEME_EMAIL: "custom-themes"
    command: ["start-dev"]

  list:
    build:
      context: ./services/list  # Caminho onde está seu Dockerfile ou Containerfile
      dockerfile: Containerfile # Ou "Dockerfile", se for o nome padrão
    container_name: espacobuddy_list
    restart: always
    ports:
      - "${LIST_PORT:-5003}:5003"
    environment:
      FLASK_ENV: ${FLASK_ENV}
      DB_HOST: ${DB_HOST}
      DB_NAME: ${DB_NAME}
      DB_USER: ${DB_USER}
      DB_PASSWORD: ${DB_PASSWORD}
    networks:
      - espacobuddy_network
    depends_on:
      - postgres
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5003/health"]
      interval: 30s
      retries: 5
      start_period: 30s

  register:
    build:
      context: ./services/register  # Caminho onde está seu Dockerfile ou Containerfile
      dockerfile: Containerfile # Ou "Dockerfile", se for o nome padrão
    container_name: espacobuddy_register
    restart: always
    ports:
      - "${LIST_PORT:-5000}:5000"
    environment:
      FLASK_ENV: ${FLASK_ENV}
      DB_HOST: ${DB_HOST}
      DB_NAME: ${DB_NAME}
      DB_USER: ${DB_USER}
      DB_PASSWORD: ${DB_PASSWORD}
    networks:
      - espacobuddy_network
    depends_on:
      - postgres
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5000/health"]
      interval: 30s
      retries: 5
      start_period: 30s

  delete:
    build:
      context: ./services/delete  # Caminho onde está seu Dockerfile ou Containerfile
      dockerfile: Containerfile # Ou "Dockerfile", se for o nome padrão
    container_name: espacobuddy_delete
    restart: always
    ports:
      - "${LIST_PORT:-5004}:5004"
    environment:
      FLASK_ENV: ${FLASK_ENV}
      DB_HOST: ${DB_HOST}
      DB_NAME: ${DB_NAME}
      DB_USER: ${DB_USER}
      DB_PASSWORD: ${DB_PASSWORD}
    networks:
      - espacobuddy_network
    depends_on:
      - postgres
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5004/health"]
      interval: 30s
      retries: 5
      start_period: 30s

volumes:
  pgdata:
  urbaneden_keycloak_volume:

networks:
  espacobuddy_network:
    driver: bridge